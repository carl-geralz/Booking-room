openapi: 3.0.1
info:
  title: Booking Room API
  version: 1.0.0
  description: "The Room Booking API is designed to replace the manual room booking process 
at Enigma Camp with a digital-based solution. This application simplifies 
the management and availability of room resources, ensuring efficient communication 
and accessibility for all employees."
servers:
- url: http://localhost:8081
paths:
  /api/v1/room_facility:
    put:
      tags:
      - Room Facility
      operationId: updateRoomFacility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomFacilityRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomFacilityResponse'
    post:
      tags:
      - Room Facility
      operationId: createRoomFacility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomFacilityRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomFacilityResponse'
  /api/v1/room:
    get:
      tags:
      - Room
      operationId: getAllRoom
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListRoom'
    put:
      tags:
      - Room
      operationId: updateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomResponse'
    post:
      tags:
      - Room
      operationId: createRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomResponse'
  /api/v1/reservation:
    get:
      tags:
      - Reservation
      operationId: getAllReservations
      parameters:
      - name: status
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - PENDING
          - APPROVED
          - DECLINED
          - CANCELLED
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListReservationResponse'
    put:
      tags:
      - Reservation
      operationId: updateReservationByUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReservationByAdmin'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseReservationResponse'
    post:
      tags:
      - Reservation
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseReservationResponse'
  /api/v1/equipment:
    get:
      tags:
      - Equipment
      operationId: getAllEquipment
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListEquipmentResponse'
    put:
      tags:
      - Equipment
      operationId: updateEquipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseEquipmentResponse'
    post:
      tags:
      - Equipment
      operationId: createEquipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseEquipmentResponse'
  /api/v1/employee:
    get:
      tags:
      - Employee
      operationId: getAllEmployee
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListEmployeeResponse'
    put:
      tags:
      - Employee
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseEmployeeResponse'
  /api/v1/auth/register:
    post:
      tags:
      - Auth
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseObject'
  /api/v1/auth/login:
    post:
      tags:
      - Auth
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseObject'
  /api/v1/room_facility/{id}:
    get:
      tags:
      - Room Facility
      operationId: getRoomFacilityById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomFacilityResponse'
    delete:
      tags:
      - Room Facility
      operationId: deleteRoomFacility
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseString'
  /api/v1/room/{id}:
    get:
      tags:
      - Room
      operationId: getRoomById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseRoomResponse'
    delete:
      tags:
      - Room
      operationId: deleteRoomById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseString'
  /api/v1/reservation/{id}:
    get:
      tags:
      - Reservation
      operationId: getReservationById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseReservationResponse'
  /api/v1/reservation/success:
    get:
      tags:
      - Reservation
      operationId: success
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/reservation/status/{id}:
    get:
      tags:
      - Reservation
      operationId: updateStatusBySendMail
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: action
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - PENDING
          - APPROVED
          - DECLINED
          - CANCELLED
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "200":
          description: OK
  /api/v1/reservation/employee:
    get:
      tags:
      - Reservation
      operationId: getAllByEmployee
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListReservationResponse'
  /api/v1/reservation/download:
    get:
      tags:
      - Reservation
      operationId: downloadReservation
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "200":
          description: OK
  /api/v1/reservation/available-room:
    get:
      tags:
      - Reservation
      operationId: getReservationStatus
      parameters:
      - name: request
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/InsertDateRequest'
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseListGetReservationStatusResponse'
  /api/v1/reservation/already-clicked:
    get:
      tags:
      - Reservation
      operationId: alreadyClicked
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/equipment/{id}:
    get:
      tags:
      - Equipment
      operationId: getEquipmentById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseEquipmentResponse'
    delete:
      tags:
      - Equipment
      operationId: deleteEquipment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseString'
  /api/v1/employee/{id}:
    get:
      tags:
      - Employee
      operationId: getEmployeeById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseEmployeeResponse'
  /api/v1/employee/delete-account/{id}:
    delete:
      tags:
      - Employee
      operationId: deleteEmployeeById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommonResponseString'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseString'
components:
  schemas:
    CommonResponseString:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: string
    CommonResponseErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/ErrorResponse'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
          format: int32
        timestamp:
          type: integer
          format: int64
    RoomFacilityRequest:
      type: object
      properties:
        roomFacilityId:
          type: string
        roomFacilityName:
          type: string
    CommonResponseRoomFacilityResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/RoomFacilityResponse'
    RoomFacilityResponse:
      type: object
      properties:
        roomId:
          type: string
        roomFacilityName:
          type: string
    RoomRequest:
      type: object
      properties:
        roomId:
          type: string
        roomType:
          type: string
        roomCapacity:
          type: integer
          format: int32
        idFacilities:
          type: array
          items:
            type: string
    CommonResponseRoomResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/RoomResponse'
    RoomResponse:
      type: object
      properties:
        roomId:
          type: string
        roomType:
          type: string
        roomCapacity:
          type: integer
          format: int32
        roomFacilities:
          type: array
          items:
            $ref: '#/components/schemas/RoomFacilityResponse'
    UpdateReservationByAdmin:
      required:
      - endTime
      - idReservation
      - roomId
      - startTime
      type: object
      properties:
        startTime:
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        endTime:
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        roomId:
          type: string
        idReservation:
          type: string
    CommonResponseReservationResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/ReservationResponse'
    EmployeeResponse:
      type: object
      properties:
        employeeId:
          type: string
        employeeName:
          type: string
        department:
          type: string
    EquipmentResponse:
      type: object
      properties:
        equipmentId:
          type: string
        equipmentName:
          type: string
    ReservationResponse:
      type: object
      properties:
        reservationId:
          type: string
        employee:
          $ref: '#/components/schemas/EmployeeResponse'
        room:
          $ref: '#/components/schemas/RoomResponse'
        reserveDate:
          type: string
          format: date
        startTime:
          type: string
          format: date
        endTime:
          type: string
          format: date
        reservationStatus:
          type: string
          enum:
          - PENDING
          - APPROVED
          - DECLINED
          - CANCELLED
        reservationDescription:
          type: string
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentResponse'
    EquipmentRequest:
      type: object
      properties:
        idEquipment:
          type: string
        equipmentName:
          type: string
    CommonResponseEquipmentResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/EquipmentResponse'
    UpdateEmployeeRequest:
      type: object
      properties:
        employeeId:
          type: string
        employeeName:
          type: string
        department:
          type: string
        phoneNumber:
          type: string
        corporateEmail:
          type: string
    CommonResponseEmployeeResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: '#/components/schemas/EmployeeResponse'
    ReservationRequest:
      required:
      - employeeId
      - endTime
      - reservationDescription
      - roomId
      - startTime
      type: object
      properties:
        startTime:
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        endTime:
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        reservationDescription:
          type: string
        roomId:
          type: string
        employeeId:
          type: string
        equipmentRequests:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentRequest'
    RegisterRequest:
      type: object
      properties:
        employeeName:
          type: string
        department:
          type: string
        phoneNumber:
          type: string
        corporateEmail:
          type: string
        username:
          type: string
        password:
          type: string
    CommonResponseObject:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: object
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    CommonResponseListRoom:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Room:
      type: object
      properties:
        roomId:
          type: string
        roomType:
          type: string
        roomCapacity:
          type: integer
          format: int32
        roomFacilities:
          type: array
          items:
            $ref: '#/components/schemas/RoomFacility'
    RoomFacility:
      type: object
      properties:
        roomFacilityId:
          type: string
        roomFacilityName:
          type: string
    CommonResponseListReservationResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReservationResponse'
    InsertDateRequest:
      required:
      - date
      type: object
      properties:
        date:
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
    CommonResponseListGetReservationStatusResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetReservationStatusResponse'
    GetReservationStatusResponse:
      type: object
      properties:
        reservationId:
          type: string
        employee:
          type: string
        room:
          type: string
        equipments:
          type: array
          items:
            type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    CommonResponseListEquipmentResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentResponse'
    CommonResponseListEmployeeResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    inline_response_400:
      oneOf:
      - $ref: '#/components/schemas/CommonResponseErrorResponse'
      - $ref: '#/components/schemas/CommonResponseString'
